[{"C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\index.tsx":"1","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\serviceWorker.ts":"2","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\App.tsx":"3","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\domain\\goods\\usecases\\get-all-goods.usecase.ts":"4","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\domain\\goods\\entities\\goods.entity.ts":"5","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\domain\\goods\\repository\\goods.repository.ts":"6","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\core\\base\\mapper.ts":"7","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\domain\\goods\\repository\\mapper\\goods.mapper.ts":"8","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\components\\GoodsItem\\GoodsItem.tsx":"9"},{"size":419,"mtime":1610268211680,"results":"10","hashOfConfig":"11"},{"size":5175,"mtime":1610267501688,"results":"12","hashOfConfig":"11"},{"size":780,"mtime":1610279115984,"results":"13","hashOfConfig":"11"},{"size":294,"mtime":1610278013523,"results":"14","hashOfConfig":"11"},{"size":1184,"mtime":1610277040201,"results":"15","hashOfConfig":"11"},{"size":630,"mtime":1610278111689,"results":"16","hashOfConfig":"11"},{"size":102,"mtime":1610276833455,"results":"17","hashOfConfig":"11"},{"size":1029,"mtime":1610278131556,"results":"18","hashOfConfig":"11"},{"size":995,"mtime":1610279114304,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1dt2jx3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\index.tsx",[],["41","42"],"C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\serviceWorker.ts",["43","44","45","46","47","48","49"],"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\App.tsx",[],"C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\domain\\goods\\usecases\\get-all-goods.usecase.ts",[],"C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\domain\\goods\\entities\\goods.entity.ts",["50","51","52"],"export interface GoodsInf {\n  id: number\n  name: string\n  price: string\n  status: number\n  activityType: number\n  description: string\n  brandName: string\n  mainPicUrl: string\n  tags: any[]\n}\n\n// 展示在列表中的tags Type\nconst OUT_STACK_STATUS = 2 // 商品缺货satatus\nconst DISCOUNT_ACTIVITY_TYPE = 3 // 商品折扣活动type\nconst SHOW_IN_LIST_TAG_TYPE = 2\nexport class GoodsEntity implements GoodsInf {\n  id: number\n  name: string\n  price: string\n  status: number\n  activityType: number\n  description: string\n  brandName: string\n  mainPicUrl: string\n  tags: any[]\n\n  constructor(goods: GoodsInf) {\n    this.id = goods.id\n    this.name = goods.name\n    this.price = goods.price\n    this.status = goods.status\n    this.activityType = goods.activityType\n    this.description = goods.description\n    this.brandName = goods.brandName\n    this.mainPicUrl = goods.mainPicUrl\n    this.tags = goods.tags\n  }\n\n  isOutStock(): boolean {\n    return this.status === OUT_STACK_STATUS\n  }\n\n  isDiscountGoods(): boolean {\n    return this.activityType === DISCOUNT_ACTIVITY_TYPE\n  }\n\n  getShowInListTags(): any[] {\n    return this.tags.filter((v) => v.type === SHOW_IN_LIST_TAG_TYPE)\n  }\n}\n","C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\domain\\goods\\repository\\goods.repository.ts",[],"C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\core\\base\\mapper.ts",[],"C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\domain\\goods\\repository\\mapper\\goods.mapper.ts",["53","54","55","56"],"C:\\Users\\Re\\Desktop\\react-ts-demo\\src\\components\\GoodsItem\\GoodsItem.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":28,"column":8,"nodeType":"63","messageId":"64","endLine":28,"endColumn":42},{"ruleId":"65","severity":1,"message":"66","line":49,"column":11,"nodeType":"67","messageId":"68","endLine":49,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":77,"column":15,"nodeType":"67","messageId":"68","endLine":77,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":90,"column":15,"nodeType":"67","messageId":"68","endLine":90,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":102,"column":7,"nodeType":"67","messageId":"68","endLine":102,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":130,"column":7,"nodeType":"67","messageId":"68","endLine":130,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":136,"column":8,"nodeType":"63","messageId":"64","endLine":136,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":10,"column":9,"nodeType":"71","messageId":"72","endLine":10,"endColumn":12,"suggestions":"73"},{"ruleId":"69","severity":1,"message":"70","line":26,"column":9,"nodeType":"71","messageId":"72","endLine":26,"endColumn":12,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"70","line":48,"column":24,"nodeType":"71","messageId":"72","endLine":48,"endColumn":27,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":14,"column":5,"nodeType":"78","messageId":"79","endLine":14,"endColumn":19},{"ruleId":"76","severity":1,"message":"80","line":17,"column":5,"nodeType":"78","messageId":"79","endLine":17,"endColumn":20},{"ruleId":"76","severity":1,"message":"81","line":35,"column":5,"nodeType":"78","messageId":"79","endLine":35,"endColumn":10},{"ruleId":"69","severity":1,"message":"70","line":52,"column":10,"nodeType":"71","messageId":"72","endLine":52,"endColumn":13,"suggestions":"82"},"valid-jsdoc",[],"jest/no-try-expect",["83"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["84","85"],["86","87"],["88","89"],"@typescript-eslint/no-unused-vars","'relatedModelId' is defined but never used.","Identifier","unusedVar","'relatedModelImg' is defined but never used.","'price' is defined but never used.",["90","91"],"no-conditional-expect",{"messageId":"92","fix":"93","desc":"94"},{"messageId":"95","fix":"96","desc":"97"},{"messageId":"92","fix":"98","desc":"94"},{"messageId":"95","fix":"99","desc":"97"},{"messageId":"92","fix":"100","desc":"94"},{"messageId":"95","fix":"101","desc":"97"},{"messageId":"92","fix":"102","desc":"94"},{"messageId":"95","fix":"103","desc":"97"},"suggestUnknown",{"range":"104","text":"105"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"104","text":"106"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"107","text":"105"},{"range":"107","text":"106"},{"range":"108","text":"105"},{"range":"108","text":"106"},{"range":"109","text":"105"},{"range":"109","text":"106"},[183,186],"unknown","never",[535,538],[1067,1070],[1019,1022]]